% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bamreadcounts.R
\name{bamreadcounts}
\alias{bamreadcounts}
\title{Extract nucleotide counts for targeted variants from BAM files}
\usage{
bamreadcounts(
  bam,
  positions,
  mapq = 10,
  flag = 1024,
  fasta = NULL,
  include_idxstats = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{bam}{Path to indexed BAM file. BAM index (.bai) must exist in the same directory.}

\item{positions}{Either a 2-column data.frame with columns 'chr' and 'pos', or path to a TSV file with the same format.}

\item{mapq}{Minimum mapping quality threshold for reads. Default 10.}

\item{flag}{SAM flags to filter out. Default 1024 (duplicates).}

\item{fasta}{Path to indexed reference fasta file. If provided, output will include reference base at each position. Default NULL.}

\item{include_idxstats}{Calculate total mapped reads from BAM index. Default FALSE. When TRUE, result includes 'total_mapped_reads' attribute.}

\item{verbose}{Print progress messages. Default TRUE.}
}
\value{
A data.frame with columns: chr, pos, A, T, G, C, INS, DEL, total_reads, coverage. If fasta is provided, includes additional ref_base column. If include_idxstats is TRUE, includes 'total_mapped_reads' attribute.
}
\description{
bamreadcounts queries a BAM file at specific genomic positions and returns nucleotide counts (A, T, G, C) as well as insertion and deletion counts at each position. Function name is an homage to https://github.com/genome/bam-readcount
}
\examples{
\dontrun{
# Using a data.frame
positions <- data.frame(chr = c("chr1", "chr2"), pos = c(12345, 67890))
result <- bamreadcounts("sample.bam", positions)

# Using a TSV file
result <- bamreadcounts("sample.bam", "positions.tsv")

# With reference fasta
result <- bamreadcounts("sample.bam", positions, fasta = "reference.fa")

# With idxstats for total mapped reads
result <- bamreadcounts("sample.bam", positions, include_idxstats = TRUE)
total_mapped <- attr(result, "total_mapped_reads")
}
}
